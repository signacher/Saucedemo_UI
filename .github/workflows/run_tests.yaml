name: Saucedemo UI tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose marker tests
        required: true
        default: all test
        type: choice
        options:
          - All tests
          - Buy tests

jobs:
  #download-history:
  #  runs-on: ubuntu-latest
  #  name: Download history
   #  steps:
   #    - name: setup Python
    #    uses: actions/setup-python@v4
    #     with:
     #      python-version: "3.10"
    #   - run: > 
    #       ARTIFACT_ID=$(curl -L 
   #        -H "Accept: application/vnd.github+json" 
    #       -H "X-GitHub-Api-Version: 2022-11-28" 
     #      https://api.github.com/repos/signacher/saucedemo_ui/actions/artifacts?name=allure-results 
     #      | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
     #      &&
     #      curl -L 
       #    -H "Accept: application/vnd.github+json" 
      #     -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
      #     -H "X-GitHub-Api-Version: 2022-11-28" 
      #     https://api.github.com/repos/signacher/saucedemo_ui/actions/artifacts/$ARTIFACT_ID/zip 
     #      -o artifacts.zip &&
     #      REPORT_ID=$(curl -L 
     #      -H "Accept: application/vnd.github+json" 
     #      -H "X-GitHub-Api-Version: 2022-11-28" 
     #      https://api.github.com/repos/signacher/saucedemo_ui/actions/artifacts?name=github-pages 
      #     | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
    #       &&
   #        curl -L 
  #         -H "Accept: application/vnd.github+json" 
   #        -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
  #         -H "X-GitHub-Api-Version: 2022-11-28" 
  #         https://api.github.com/repos/signacher/saucedemo_ui/actions/artifacts/$REPORT_ID/zip 
 #          -o pages.zip
 #      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
 #      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
 #      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
 #      - run: echo "Browser=CHROME" > ./allure-results/environment.properties
 #      - run: echo "BrowserVersion=117" >> ./allure-results/environment.properties
 #      - run: echo "Stand=Production" >> ./allure-results/environment.properties
 #      - name: Store allure history
 #        uses: actions/upload-artifact@v3
 #        with:
 #          name: allure-results
 #          path:
 #            allure-results
 #          retention-days: 1
  
  test:
    runs-on: ubuntu-latest
    #needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-versions: "3.10"
      - name: Setup Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Install dependencies
        run: pip install -r requirements.txt
      #- name: Download all workflow run artifacts
       # uses: actions/download-artifact@v3
      - name: all tests
        if: "github.event.inputs.deployment_target == 'All tests'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
      - name: buy tests
        if: "github.event.inputs.deployment_target == 'Buy tests'"
        
        run: pytest -m buy --alluredir=allure-results
        continue-on-error: true
      #- name: Store allure results
       # uses: actions/upload-artifact@v3
      #  with:
       #   name: allure-results
       #   path:
       #     allure-results
       #   retention-days: 1
          
      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 20
      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

#   generate_report:
#     runs-on: ubuntu-latest
 #    needs: test
 #    name: generate report
 #    steps:
 #      - uses: actions/setup-java@v3
  #       with:
   #        distribution: 'microsoft'
  #         java-version: '17'
  #     - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz && sudo tar -zxvf allure-2.25.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.25.0/bin/allure /usr/bin/allure
  #     - name: Download all workflow artifacts
  #       uses: actions/download-artifact@v3
  #     - run: allure generate -c allure-results -o _site
  #     - name: Store generated report
  #       uses: actions/upload-artifact@v3
   #      with:
  #         name: _site
  #         path:
  #           _site
  #         retention-days: 1

#   publish_report:
#     runs-on: ubuntu-latest
 #    needs: generate_report
#     name: publication report
#     steps:
 #      - name: Download all workflow run artifacts
#         uses: actions/download-artifact@v3
# #       - name: Upload Pages artifact
#         uses: actions/upload-pages-artifact@v2
# #       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1.2.9
